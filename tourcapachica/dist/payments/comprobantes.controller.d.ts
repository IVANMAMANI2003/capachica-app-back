import { ComprobantesService } from './comprobantes.service';
import { CreateComprobanteDto } from './dto/create-comprobante.dto';
import { UpdateComprobanteDto } from './dto/update-comprobante.dto';
export declare class ComprobantesController {
    private readonly comprobantesService;
    constructor(comprobantesService: ComprobantesService);
    create(createComprobanteDto: CreateComprobanteDto): Promise<{
        pago: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            estado: string;
            moneda: string;
            reservaId: number;
            montoTotal: import(".prisma/client/runtime/library").Decimal;
            fechaPago: Date | null;
            datosMetodoPago: import(".prisma/client/runtime/library").JsonValue | null;
            metadata: import(".prisma/client/runtime/library").JsonValue | null;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    }>;
    findAll(): Promise<({
        pago: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            estado: string;
            moneda: string;
            reservaId: number;
            montoTotal: import(".prisma/client/runtime/library").Decimal;
            fechaPago: Date | null;
            datosMetodoPago: import(".prisma/client/runtime/library").JsonValue | null;
            metadata: import(".prisma/client/runtime/library").JsonValue | null;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    })[]>;
    findOne(id: string): Promise<{
        pago: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            estado: string;
            moneda: string;
            reservaId: number;
            montoTotal: import(".prisma/client/runtime/library").Decimal;
            fechaPago: Date | null;
            datosMetodoPago: import(".prisma/client/runtime/library").JsonValue | null;
            metadata: import(".prisma/client/runtime/library").JsonValue | null;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    }>;
    findByPagoId(pagoId: string): Promise<{
        pago: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            estado: string;
            moneda: string;
            reservaId: number;
            montoTotal: import(".prisma/client/runtime/library").Decimal;
            fechaPago: Date | null;
            datosMetodoPago: import(".prisma/client/runtime/library").JsonValue | null;
            metadata: import(".prisma/client/runtime/library").JsonValue | null;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    }>;
    update(id: string, updateComprobanteDto: UpdateComprobanteDto): Promise<{
        pago: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            estado: string;
            moneda: string;
            reservaId: number;
            montoTotal: import(".prisma/client/runtime/library").Decimal;
            fechaPago: Date | null;
            datosMetodoPago: import(".prisma/client/runtime/library").JsonValue | null;
            metadata: import(".prisma/client/runtime/library").JsonValue | null;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    }>;
    remove(id: string): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    }>;
    updateEstado(id: string, estado: string): Promise<{
        pago: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            estado: string;
            moneda: string;
            reservaId: number;
            montoTotal: import(".prisma/client/runtime/library").Decimal;
            fechaPago: Date | null;
            datosMetodoPago: import(".prisma/client/runtime/library").JsonValue | null;
            metadata: import(".prisma/client/runtime/library").JsonValue | null;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        estado: string;
        moneda: string;
        pagoId: number;
        serie: string;
        numero: number;
        rucCliente: string | null;
        razonSocial: string | null;
        direccionCliente: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        igv: import(".prisma/client/runtime/library").Decimal;
        total: import(".prisma/client/runtime/library").Decimal;
        codigoSunat: string | null;
        codigoHash: string | null;
        xmlUrl: string | null;
        pdfUrl: string | null;
        tipoComprobante: string;
        fechaEmision: Date;
    }>;
}
